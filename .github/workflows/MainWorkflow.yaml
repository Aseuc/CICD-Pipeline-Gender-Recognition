name: Main Workflow
on:
  push:
    branches: [main]
jobs:
  build-and-test:
      runs-on: [ubuntu-latest]
      container: docker://dvcorg/cml-py3:latest
      steps:
        - name: Caching von pip Abhängigkeiten
          uses: actions/cache@v2
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
          env:
            GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"
        
        - uses: actions/checkout@v3
          env:
           repo_token: ${{ secrets.GITHUB_TOKEN }}

        - name: Abhängigkeiten installieren
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: 'Datenaufbereitung und -tests'
          run: |
            
            python data/dataprep_scripts/datapreparation.py 

        - name: Generierung und Veröffentlichung der visualisierten Daten,Tests und Verteilungen
          env:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
          run: |
            chmod +x .github/workflows/data.sh
            ./.github/workflows/data.sh
            
       
        - name: 'Modell trainieren'
          env:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
          run: |
            python model/model_script/model_train.py
            chmod +x .github/workflows/resource_model_train.sh
            ./.github/workflows/resource_model_train.sh
        - name: 'Modell testen'                   
          run: |
            python test/model_test_scripts/model_test.py
        
        - name: Code Qualitätstests Herunterladen
          uses: actions/download-artifact@v2
          with:
            name: test-results

        - name: "Veröffenlichung der Modellmetriken und hinzufügen neuer Modelle in das Repository"
          env:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
          run: |
            chmod +x .github/workflows/model.sh
            ./.github/workflows/model.sh
            git config --local user.email "Aseuc@github.com"
            git config --local user.name "Aseuc"
            git add model/PyTorch_Trained_Models
            git add reports/*
            git add radon_tests/*
            git commit -m "Add trained model" || echo "No changes to commit"
            git push origin main
        
  deploy:
    needs: [build-and-test]
    runs-on: [ubuntu-latest]
    container: docker://dvcorg/cml-py3:latest
    steps:
      - name: Caching von pip Abhängigkeiten
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        env:
          GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"

      - uses: actions/checkout@v3
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
        with:
          sparse-checkout: |
            .github/workflows/*
            requirements.txt
            data/reports_data/*
            data/plot_data/*
            data/plots_balanced/*
            data/plot_data/*
            data/reports_data/*
            data/IDs/*
            data/train-test-data/*
            data/train-test-data/train/*
            data/train-test-data/test/*
            data/train-test-data/train/men/*
            data/train-test-data/train/women/*
            data/train-test-data/test/women/*
            data/train-test-data/test/men/*
            data/source_csv/*
            test/*
            data/dataprep_scripts/*
            model/*
            reports/*
            deploy/*
            radon_tests/*
      
      - name: ML-Modell auf streamlit deployen
        run: |
          git pull origin main
          git push origin main
          git config --local user.email "Aseuc@github.com"
          git config --local user.name "Aseuc"
          git add .
          git commit -m "Add generated file" -a || echo "No changes to commit"
          git push origin main

  code_quality_check:
      runs-on: [ubuntu-latest]
      container: docker://dvcorg/cml-py3:latest
      steps:
        - name: Caching von pip Abhängigkeiten
          uses: actions/cache@v3
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{hashFiles('requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
          env:
            GITHUB_TOKEN: "${{secrets.WORKFLOW_TOKEN}}"
        
        - uses: actions/checkout@v3
          env:
            repo_token: ${{secrets.WORKFLOW_TOKEN }}
          with:
            sparse-checkout: |
              .github/workflows/*
              requirements.txt
              data/reports_data/*
              data/plot_data/*
              data/plots_balanced/*
              data/plot_data/*
              data/reports_data/*
              data/IDs/*
              data/train-test-data/*
              data/train-test-data/train/*
              data/train-test-data/test/*
              data/train-test-data/train/men/*
              data/train-test-data/train/women/*
              data/train-test-data/test/women/*
              data/train-test-data/test/men/*
              data/source_csv/*
              test/*
              data/dataprep_scripts/*
              model/*
              reports/*
              deploy/*
              radon_tests/*
        - name: Abhängigkeiten installieren
          run: |
            python -m pip install --upgrade pip
            pip install radon 

        - name: Radon
          env:
            repo_token: ${{secrets.WORKFLOW_TOKEN}}
          run: |
            chmod +x .github/workflows/radon.sh
            ./.github/workflows/radon.sh
          
        - name: Upload test results to GitHub
          uses: actions/upload-artifact@v2
          with:
            name: test-results
            path: radon_tests/